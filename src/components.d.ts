/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface WidgetDropdown {
    'name': string;
  }
  interface WidgetDropdownAttributes extends StencilHTMLAttributes {
    'name'?: string;
    'onOnToggle'?: (event: CustomEvent) => void;
  }

  interface CallbackWidget {
    'id': string;
    'isOpen': boolean;
  }
  interface CallbackWidgetAttributes extends StencilHTMLAttributes {
    'id'?: string;
    'isOpen'?: boolean;
  }

  interface WidgetButton {
    'configs': any;
    'isOpenChannels': boolean;
  }
  interface WidgetButtonAttributes extends StencilHTMLAttributes {
    'configs'?: any;
    'isOpenChannels'?: boolean;
    'onOnOpenModal'?: (event: CustomEvent) => void;
  }

  interface WidgetModal {
    'configs': any;
  }
  interface WidgetModalAttributes extends StencilHTMLAttributes {
    'configs'?: any;
    'onOnCloseModal'?: (event: CustomEvent) => void;
  }
}

declare global {
  interface StencilElementInterfaces {
    'WidgetDropdown': Components.WidgetDropdown;
    'CallbackWidget': Components.CallbackWidget;
    'WidgetButton': Components.WidgetButton;
    'WidgetModal': Components.WidgetModal;
  }

  interface StencilIntrinsicElements {
    'widget-dropdown': Components.WidgetDropdownAttributes;
    'callback-widget': Components.CallbackWidgetAttributes;
    'widget-button': Components.WidgetButtonAttributes;
    'widget-modal': Components.WidgetModalAttributes;
  }


  interface HTMLWidgetDropdownElement extends Components.WidgetDropdown, HTMLStencilElement {}
  var HTMLWidgetDropdownElement: {
    prototype: HTMLWidgetDropdownElement;
    new (): HTMLWidgetDropdownElement;
  };

  interface HTMLCallbackWidgetElement extends Components.CallbackWidget, HTMLStencilElement {}
  var HTMLCallbackWidgetElement: {
    prototype: HTMLCallbackWidgetElement;
    new (): HTMLCallbackWidgetElement;
  };

  interface HTMLWidgetButtonElement extends Components.WidgetButton, HTMLStencilElement {}
  var HTMLWidgetButtonElement: {
    prototype: HTMLWidgetButtonElement;
    new (): HTMLWidgetButtonElement;
  };

  interface HTMLWidgetModalElement extends Components.WidgetModal, HTMLStencilElement {}
  var HTMLWidgetModalElement: {
    prototype: HTMLWidgetModalElement;
    new (): HTMLWidgetModalElement;
  };

  interface HTMLElementTagNameMap {
    'widget-dropdown': HTMLWidgetDropdownElement
    'callback-widget': HTMLCallbackWidgetElement
    'widget-button': HTMLWidgetButtonElement
    'widget-modal': HTMLWidgetModalElement
  }

  interface ElementTagNameMap {
    'widget-dropdown': HTMLWidgetDropdownElement;
    'callback-widget': HTMLCallbackWidgetElement;
    'widget-button': HTMLWidgetButtonElement;
    'widget-modal': HTMLWidgetModalElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
